|-- index.html
|-- jsconfig.json
|-- LICENSE
|-- package-lock.json
|-- package.json
|-- public/
  |-- favicon.ico
  |-- img/
    |-- batuqueimg.jpg
    |-- favicon-16x16.png
    |-- favicon-32x32.png
    |-- favicon.ico
    |-- homem_tocando.png
    |-- logo.svg
    |-- logo_png 180x180.png
    |-- logo_png 192x192.png
    |-- logo_png 512x512.png
    |-- macro-eye-iris.jpg
    |-- opencv_logo.png
    |-- realidade_aumentada.jpg
    |-- site.webmanifest
    |-- visao_computacional.jpg
|-- README.md
|-- src/
  |-- App.vue
  |-- assets/
    |-- base.css
    |-- logo.svg
    |-- main.css
  |-- components/
    |-- About.vue
    |-- BugReport.vue
    |-- Contact.vue
    |-- Footer.vue
    |-- Header.vue
    |-- Hero.vue
    |-- icons/
    |-- Resources.vue
    |-- Services.vue
    |-- Test.vue
  |-- main.js
|-- take_folder_code_and_names.py
|-- vite.config.js


File contents:

|-- index.html
  Content:
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Batuque</title>
    
        <!-- Boxicons -->
        <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">
    
        <!-- Remix Icons -->
        <link href="https://cdn.jsdelivr.net/npm/remixicon@4.0.0/fonts/remixicon.css" rel="stylesheet" />
    
        <!-- Google Fonts -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap"
              rel="stylesheet">
    
        <!-- Favicon -->
        <link rel="apple-touch-icon" sizes="180x180" href="/img/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/img/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/img/favicon-16x16.png">
        <link rel="manifest" href="/site.webmanifest">
    </head>
    
    <body>
    <div id="app"></div>
    
    <!-- Vue.js -->
    <script type="module" src="/src/main.js"></script>
    </body>
    
    </html>
|-- jsconfig.json
|-- LICENSE
|-- package-lock.json
|-- package.json
|-- public/
  |-- favicon.ico
  |-- img/
    |-- batuqueimg.jpg
    |-- favicon-16x16.png
    |-- favicon-32x32.png
    |-- favicon.ico
    |-- homem_tocando.png
    |-- logo.svg
    |-- logo_png 180x180.png
    |-- logo_png 192x192.png
    |-- logo_png 512x512.png
    |-- macro-eye-iris.jpg
    |-- opencv_logo.png
    |-- realidade_aumentada.jpg
    |-- site.webmanifest
    |-- visao_computacional.jpg
|-- README.md
|-- src/
  |-- App.vue
  |-- assets/
    |-- base.css
      Content:
        /* color palette from <https://github.com/vuejs/theme> */
        :root {
          --vt-c-white: #ffffff;
          --vt-c-white-soft: #f8f8f8;
          --vt-c-white-mute: #f2f2f2;
        
          --vt-c-black: #181818;
          --vt-c-black-soft: #222222;
          --vt-c-black-mute: #282828;
        
          --vt-c-indigo: #2c3e50;
        
          --vt-c-divider-light-1: rgba(60, 60, 60, 0.29);
          --vt-c-divider-light-2: rgba(60, 60, 60, 0.12);
          --vt-c-divider-dark-1: rgba(84, 84, 84, 0.65);
          --vt-c-divider-dark-2: rgba(84, 84, 84, 0.48);
        
          --vt-c-text-light-1: var(--vt-c-indigo);
          --vt-c-text-light-2: rgba(60, 60, 60, 0.66);
          --vt-c-text-dark-1: var(--vt-c-white);
          --vt-c-text-dark-2: rgba(235, 235, 235, 0.64);
        }
        
        /* semantic color variables for this project */
        :root {
          --color-background: var(--vt-c-white);
          --color-background-soft: var(--vt-c-white-soft);
          --color-background-mute: var(--vt-c-white-mute);
        
          --color-border: var(--vt-c-divider-light-2);
          --color-border-hover: var(--vt-c-divider-light-1);
        
          --color-heading: var(--vt-c-text-light-1);
          --color-text: var(--vt-c-text-light-1);
        
          --section-gap: 160px;
        }
        
        @media (prefers-color-scheme: dark) {
          :root {
            --color-background: var(--vt-c-black);
            --color-background-soft: var(--vt-c-black-soft);
            --color-background-mute: var(--vt-c-black-mute);
        
            --color-border: var(--vt-c-divider-dark-2);
            --color-border-hover: var(--vt-c-divider-dark-1);
        
            --color-heading: var(--vt-c-text-dark-1);
            --color-text: var(--vt-c-text-dark-2);
          }
        }
        
        *,
        *::before,
        *::after {
          box-sizing: border-box;
          margin: 0;
          font-weight: normal;
        }
        
        body {
          min-height: 100vh;
          color: var(--color-text);
          background: var(--color-background);
          transition:
            color 0.5s,
            background-color 0.5s;
          line-height: 1.6;
          font-family:
            Inter,
            -apple-system,
            BlinkMacSystemFont,
            'Segoe UI',
            Roboto,
            Oxygen,
            Ubuntu,
            Cantarell,
            'Fira Sans',
            'Droid Sans',
            'Helvetica Neue',
            sans-serif;
          font-size: 15px;
          text-rendering: optimizeLegibility;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }
    |-- logo.svg
    |-- main.css
      Content:
        @import './base.css';
        
        /*  vermelho */
        * {
          padding: 0;
          margin: 0;
          box-sizing: border-box;
          font-family: "Inter", sans-serif;
          text-decoration: none;
          list-style: none;
          scroll-behavior: smooth;
        }
        
        :root {
          --text-color: #fff;
          --bg-color: #1b1f24;
          --second-bg-color: #22282f;
          --main-color: #e71d1d;
          --other-color: #d8dbe0;
        
          --h1-font: 4.5rem;
          --h2-font: 2.9rem;
          --p-font: 1.2rem;
        }
        
        body {
          color: var(--text-color);
          background: var(--bg-color);
        }
        
        
        section {
          padding: 110px 16% 90px;
        }
        
        form input,
        form textarea {
          width: 100%;
          padding: 20px;
          border: none;
          outline: none;
          box-shadow: 0 0 5px var(--main-color);
          background: #2d343f;
          color: var(--text-color);
          margin-bottom: 20px;
          border-radius: 8px;
        }
        
        form input::placeholder,
        form textarea::placeholder {
          color: var(--other-color);
          font-size: 15px;
        }
        
        @media (max-width: 1700px) {
          header {
            padding: 20px 8%;
          }
        
          header.sticky {
            padding: 14px 8%;
          }
        
          section {
            padding: 90px 8% 80px;
          }
        
        }
        
        @media (max-width: 1380px) {
          header {
            padding: 20px 5%;
          }
        
          header.sticky {
            padding: 14px 5%;
          }
        
          section {
            padding: 90px 5% 80px;
          }
        
          .footer {
            padding: 18px 5%;
          }
        
          .hero {
            height: 90vh;
            background-position: center;
          }
        }
        
        @media (max-width: 1290px) {
          .box {
            padding: 40px 40px 46px;
          }
        
          .box img {
            width: 100%;
            height: 60px;
            max-width: 60px;
          }
        
          .box h3 {
            font-size: 21px;
          }
        }
        
        @media (max-width: 1240px) {
          .about {
            grid-template-columns: 1fr;
            gap: 2rem;
            text-align: center;
          }
        
        
          .hero {
            height: 50vh;
            padding-bottom: 0;
          }
        
          .about-img img {
            text-align: center;
            width: 100%;
            height: 400px;
            max-width: 400px;
            border-radius: 50%;
            object-fit: cover;
            margin: 0 auto;
          }
        
          .main-btn{
            display: flex;
            flex-direction: column;
            gap: 10px;
            align-items: start;
          }
        
          .main-btn .btn2{
            margin: 0;
          }
        
          :root {
            --h1-font: 4rem;
            --h2-font: 2.2rem;
            --p-font: 15px;
          }
        }
        
        @media (max-width: 950px) {
          :root {
            --h1-font: 3.5rem;
          }
        
        
          .social {
            margin-bottom: 20px;
          }
        
          #menu-icon {
            display: block;
          }
        
          .navlist {
            position: absolute;
            top: 100%;
            right: -100%;
            width: 255px;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            background: var(--bg-color);
            transition: all .5s ease;
          }
        
          .navlist a {
            display: block;
            padding: 17px;
            font-size: 22px;
          }
        
          .navlist.active {
            right: 0;
          }
        }
        
        @media (max-width: 700px) {
          .main-content p {
            width: 100%;
          }
        
          .hero{
            background: none;
            height: 100vh;
          }
        
          header{
            padding: 0 8%;
          }
        
          header .top-btnn{
            display: none;
          }
        
        }
        
        
        @media (max-width: 470px) {
          :root {
            --h1-font: 3rem;
            --h2-font: 2rem;
          }
        
          .main-content{
            width:  350px;
          }
          .hero{
            height: 100vh;
            vertical-align: center;
          }
          .main-content h4{
            width:  350px;
          }
        
          .about-img img {
            text-align: center;
            width: 100%;
            height: 300px;
            max-width: 300px;
            border-radius: 50%;
            object-fit: cover;
            margin: 0 auto;
          }
        }  |-- components/
    |-- About.vue
    |-- BugReport.vue
    |-- Contact.vue
    |-- Footer.vue
    |-- Header.vue
    |-- Hero.vue
    |-- icons/
    |-- Resources.vue
    |-- Services.vue
    |-- Test.vue
  |-- main.js
    Content:
      import { createApp } from 'vue';
      import App from './App.vue';
      
      createApp(App).mount('#app');
      
|-- take_folder_code_and_names.py
  Content:
    import os
    
    def list_directory(path, level=0, output_file=None, exclude_file=None, list_content=False):
        ignored_folders = {
            '.venv', '.idea', '.git', 'node_modules', '__pycache__', 'dist', 
            'build', '.DS_Store', '.vscode', 'target', 'out', '.pytest_cache', 
            '.mypy_cache', 'logs', 'coverage'
        }
    
        for item in os.listdir(path):
            full_path = os.path.join(path, item)
    
            if item.startswith('.'):
                continue
    
            if os.path.isdir(full_path) and item in ignored_folders:
                continue
    
            if os.path.isfile(full_path):
                if item == exclude_file:
                    continue
    
                if output_file:
                    output_file.write("  " * level + "|-- " + item + "\n")
    
                if list_content and item.endswith(('.py', '.js', '.java', '.c', '.cpp', '.h', '.ipynb', '.html', '.css', '.ts', '.tsx', '.scss', '.sass')):
                    output_file.write("  " * (level + 1) + "Content:\n")
                    with open(full_path, 'r', encoding='utf-8', errors='ignore') as f:
                        for line in f:
                            output_file.write("  " * (level + 2) + line)
            elif os.path.isdir(full_path):
                if output_file:
                    output_file.write("  " * level + "|-- " + item + "/\n")
                list_directory(full_path, level + 1, output_file, exclude_file, list_content)
    
    def generate_listing(directory_path, output_file_path, exclude_file_name):
        with open(output_file_path, 'w', encoding='utf-8') as output_file:
            list_directory(directory_path, output_file=output_file, exclude_file=exclude_file_name)
            output_file.write("\n\nFile contents:\n\n")
            list_directory(directory_path, output_file=output_file, exclude_file=exclude_file_name, list_content=True)
    
    directory_path = './'
    output_file_path = 'directory_listing.txt'
    exclude_file_name = os.path.basename(output_file_path)
    
    generate_listing(directory_path, output_file_path, exclude_file_name)
    
    print(f"The listing has been saved in {output_file_path}")
|-- vite.config.js
  Content:
    import { fileURLToPath, URL } from 'node:url'
    
    import { defineConfig } from 'vite'
    import vue from '@vitejs/plugin-vue'
    
    // https://vitejs.dev/config/
    export default defineConfig({
      plugins: [
        vue(),
      ],
      resolve: {
        alias: {
          '@': fileURLToPath(new URL('./src', import.meta.url))
        }
      }
    })
